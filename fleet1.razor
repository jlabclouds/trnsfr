@page "/fleet"
@using System.Collections.Generic
@using System.Linq

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<style>
    /* ... keep your existing styles ... */
    #fleet-map { width: 100%; height: 400px; border-radius: 12px; margin-bottom: 1.5rem; }
</style>

<PageTitle>Robot Fleet Manager Dashboard</PageTitle>
<h1>Robot Fleet Manager Dashboard</h1>

<div class="dashboard-container">
    <div style="margin-bottom:2.5rem;">
        <h2>Fleet Map</h2>
        <div id="fleet-map"></div>
        <p style="color:#64748b;">Click a robot marker to view details and access device.</p>
    </div>

    <!-- Alerts Section (unchanged) -->
    <!-- ... keep your alerts code ... -->

    <!-- Stats Cards Section -->
    <div class="stats-cards" style="flex: 1;">
        <div class="card">
            <h3>Fleet Statistics</h3>
            <ul style="list-style: none; padding: 0; margin: 0;">
                <li>Total Robots: <strong>@TotalRobots</strong></li>
                <li>Active Robots: <strong>@ActiveRobots</strong></li>
                <li>Inactive Robots: <strong>@Robots.Count(r => r.Status == "Inactive")</strong></li>
            </ul>
        </div>
    </div>

    <h2>Robot Fleet Overview</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Robot ID</th>
                <th>Model</th>
                <th>Status</th>
                <th>Last Maintenance</th>
                <th>Battery Level (%)</th>
                <th>Location</th>
                <th>Sensors</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var robot in Robots)
            {
                <tr>
                    <td data-label="Robot ID">@robot.Id</td>
                    <td data-label="Model">@robot.Model</td>
                    <td data-label="Status">@robot.Status</td>
                    <td data-label="Last Maintenance">@robot.LastMaintenanceDate.ToShortDateString()</td>
                    <td data-label="Battery Level (%)">@robot.BatteryLevel</td>
                    <td data-label="Location">@robot.Location</td>
                    <td data-label="Sensors">
                        @if (robot.Sensors != null && robot.Sensors.Any())
                        {
                            <ul>
                                @foreach (var sensor in robot.Sensors)
                                {
                                    <li>@sensor.Name: @sensor.Value</li>
                                }
                            </ul>
                        }
                        else
                        {
                            <span>No Data</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initFleetMap", Robots);
        }
    }

    [Inject] public IJSRuntime JSRuntime { get; set; }

    // Add Latitude/Longitude to Robot class
    public class Robot
    {
        public int Id { get; set; }
        public string Model { get; set; }
        public string Status { get; set; }
        public DateTime LastMaintenanceDate { get; set; }
        public int BatteryLevel { get; set; }
        public string Location { get; set; }
        public double Latitude { get; set; }
        public double Longitude { get; set; }
        public List<SensorInfo> Sensors { get; set; }
    }

    public class SensorInfo
    {
        public string Name { get; set; }
        public string Value { get; set; }
    }

    private List<Robot> Robots = new()
    {
        new Robot
        {
            Id = 101,
            Model = "Atlas",
            Status = "Active",
            LastMaintenanceDate = DateTime.Now.AddDays(-15),
            BatteryLevel = 85,
            Location = "Warehouse A",
            Latitude = 37.7749, Longitude = -122.4194,
            Sensors = new List<SensorInfo>
            {
                new SensorInfo { Name = "Temperature", Value = "36°C" },
                new SensorInfo { Name = "Proximity", Value = "Clear" }
            }
        },
        new Robot
        {
            Id = 102,
            Model = "Spot",
            Status = "Maintenance",
            LastMaintenanceDate = DateTime.Now.AddDays(-5),
            BatteryLevel = 60,
            Location = "Workshop",
            Latitude = 37.7755, Longitude = -122.4180,
            Sensors = new List<SensorInfo>
            {
                new SensorInfo { Name = "Temperature", Value = "40°C" }
            }
        },
        new Robot
        {
            Id = 103,
            Model = "Pepper",
            Status = "Active",
            LastMaintenanceDate = DateTime.Now.AddDays(-20),
            BatteryLevel = 90,
            Location = "Lobby",
            Latitude = 37.7760, Longitude = -122.4170,
            Sensors = new List<SensorInfo>
            {
                new SensorInfo { Name = "Humidity", Value = "45%" }
            }
        },
        new Robot
        {
            Id = 104,
            Model = "Nao",
            Status = "Inactive",
            LastMaintenanceDate = DateTime.Now.AddDays(-40),
            BatteryLevel = 40,
            Location = "Storage",
            Latitude = 37.7770, Longitude = -122.4160,
            Sensors = null
        }
    };

    private int TotalRobots => Robots.Count;
    private int ActiveRobots => Robots.Count(r => r.Status == "Active");
    private int RobotsInMaintenance => Robots.Count(r => r.Status == "Maintenance");
    // ... FleetAlert class and FleetAlerts list unchanged ...
}
